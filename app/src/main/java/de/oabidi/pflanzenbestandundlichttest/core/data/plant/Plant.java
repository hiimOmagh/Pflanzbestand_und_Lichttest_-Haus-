package de.oabidi.pflanzenbestandundlichttest.core.data.plant;

import android.net.Uri;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;

/**
 * Room entity describing a plant entry in the application's catalogue. Each instance
 * represents a single plant with descriptive information and an optional photo. The
 * acquisition timestamp is stored in milliseconds since the Unix epoch.
 * <p>
 * Required fields are {@code name} and {@code acquiredAtEpoch}. All other string fields and
 * the {@link Uri} reference to a photo are optional and may be {@code null} or empty
 * depending on the caller.
 */
@Entity
public class Plant {
    @PrimaryKey(autoGenerate = true)
    private long id;
    private String name;
    private String description;
    private String species;
    private String locationHint;
    private long acquiredAtEpoch;
    private Uri photoUri;
    private Long ledProfileId;

    /**
     * Default constructor required by Room. Prefer {@link #Plant(String, String, String, String, long, Uri)}
     * to create fully initialised instances.
     */
    public Plant() {
        this.ledProfileId = null;
    }

    /**
     * Constructs a plant with the provided attributes.
     *
     * @param name            human readable name of the plant, must not be {@code null}
     * @param description     optional description, may be {@code null}
     * @param species         optional species information, may be {@code null}
     * @param locationHint    optional location hint, may be {@code null}
     * @param acquiredAtEpoch acquisition time in milliseconds since the Unix epoch
     * @param photoUri        optional reference to a photo, may be {@code null}
     */
    @Ignore
    public Plant(@NonNull String name, String description, String species, String locationHint, long acquiredAtEpoch, Uri photoUri) {
        this.name = name;
        this.description = description;
        this.species = species;
        this.locationHint = locationHint;
        this.acquiredAtEpoch = acquiredAtEpoch;
        this.photoUri = photoUri;
        this.ledProfileId = null;
    }

    /**
     * @return database identifier for this plant. Zero indicates the entity has not been persisted yet.
     */
    public long getId() {
        return id;
    }

    /**
     * Sets the database identifier. Typically used only by Room when persisting the entity.
     *
     * @param id primary key value generated by the database
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * @return the plant's name, never {@code null}
     */
    @NonNull
    public String getName() {
        return name;
    }

    /**
     * Updates the plant's name.
     *
     * @param name new non-null name value
     */
    public void setName(@NonNull String name) {
        this.name = name;
    }

    /**
     * @return an optional description of the plant or {@code null}
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets a descriptive text about the plant.
     *
     * @param description optional description, may be {@code null}
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * @return the species information or {@code null}
     */
    public String getSpecies() {
        return species;
    }

    /**
     * Sets the species of the plant.
     *
     * @param species optional species value, may be {@code null}
     */
    public void setSpecies(String species) {
        this.species = species;
    }

    /**
     * @return optional hint where the plant is located or {@code null}
     */
    public String getLocationHint() {
        return locationHint;
    }

    /**
     * Defines a location hint for where the plant can be found.
     *
     * @param locationHint optional value, may be {@code null}
     */
    public void setLocationHint(String locationHint) {
        this.locationHint = locationHint;
    }

    /**
     * @return time the plant was acquired in milliseconds since the Unix epoch
     */
    public long getAcquiredAtEpoch() {
        return acquiredAtEpoch;
    }

    /**
     * Sets the acquisition time.
     *
     * @param acquiredAtEpoch timestamp in milliseconds since the Unix epoch
     */
    public void setAcquiredAtEpoch(long acquiredAtEpoch) {
        this.acquiredAtEpoch = acquiredAtEpoch;
    }

    /**
     * @return reference to a photo of the plant, or {@code null} if none is available
     */
    public Uri getPhotoUri() {
        return photoUri;
    }

    /**
     * Associates a photo with the plant.
     *
     * @param photoUri optional {@link Uri} to a photo, may be {@code null}
     */
    public void setPhotoUri(Uri photoUri) {
        this.photoUri = photoUri;
    }

    /**
     * @return identifier of the associated LED profile or {@code null} if none is linked
     */
    @Nullable
    public Long getLedProfileId() {
        return ledProfileId;
    }

    /**
     * Associates this plant with an LED profile.
     *
     * @param ledProfileId optional identifier of the LED profile, may be {@code null}
     */
    public void setLedProfileId(@Nullable Long ledProfileId) {
        this.ledProfileId = ledProfileId;
    }
}
